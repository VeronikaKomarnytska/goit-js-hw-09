{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAbbO,QAAUC,SAASC,cAAc,SAiBjCF,QAAQG,iBAAiB,UAAUC,IACjCA,EAAMC,iBAEN,MAAMC,EAAaF,EAAMG,cAAcC,SACjCC,EAAQC,OAAOJ,EAAWb,MAAMkB,OAChCC,EAAOF,OAAOJ,EAAWM,KAAKD,OAC9BE,EAASH,OAAOJ,EAAWO,OAAOF,OAExC,IAAIG,EAAaL,EAEjB,IAAK,IAAIM,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCxB,EAAcwB,EAAGD,GACdE,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA4B,OAAOC,QAAQ,uBAAqB1B,QAAiBC,MAAU,IAEhE0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA4B,OAAOG,QAAQ,sBAAoB5B,QAAeC,MAAU,IAGhEO,QAAQqB,QACRP,GAAcF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nformRef = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nformRef.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const formInputs = event.currentTarget.elements;\n  const delay = Number(formInputs.delay.value);\n  const step = Number(formInputs.step.value);\n  const amount = Number(formInputs.amount.value);\n\n  let firstDelay = delay;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    formRef.reset();\n    firstDelay += step;\n  }\n});\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","formRef","document","querySelector","addEventListener","event","preventDefault","formInputs","currentTarget","elements","delay1","Number","value","step","amount","firstDelay","i","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.b5c407fb.js.map"}