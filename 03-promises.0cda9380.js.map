{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAbPO,QAAUC,SAASC,cAAc,SAiBjCF,QAAQG,iBAAiB,UAAU,SAAAC,GACjCA,EAAMC,iBASN,IAPA,IAAMC,EAAaF,EAAMG,cAAcC,SACjCC,EAAQC,OAAOJ,EAAWb,MAAMkB,OAChCC,EAAOF,OAAOJ,EAAWM,KAAKD,OAC9BE,EAASH,OAAOJ,EAAWO,OAAOF,OAEpCG,EAAa,EAERC,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAEhCD,EAAaL,EAIblB,EAAcwB,EAFdD,GAAcF,GAGXI,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjBJ,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE9D4B,OAAM,SAAAJ,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClBJ,EAAA6B,OAAOI,QAAQ,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAG9DO,QAAQuB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nformRef = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nformRef.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const formInputs = event.currentTarget.elements;\n  const delay = Number(formInputs.delay.value);\n  const step = Number(formInputs.step.value);\n  const amount = Number(formInputs.amount.value);\n\n  let firstDelay = 0;\n\n  for (let i = 1; i <= amount; i += 1) {\n    // console.log(i);\n    firstDelay = delay;\n    // console.log(delay);\n    firstDelay += step;\n\n    createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    formRef.reset();\n  }\n});\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","formRef","document","querySelector","addEventListener","event","preventDefault","formInputs","currentTarget","elements","delay1","Number","value","step","amount","firstDelay","i","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.0cda9380.js.map"}